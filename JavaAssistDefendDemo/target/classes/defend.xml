<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- debug包开启防护功能，默认仅release开启 -->
    <defendOnDebug>true</defendOnDebug>
    <!-- 关闭 所有防护功能 -->
    <defendOff>true</defendOff>

    <!-- debug包开启防护功能，默认仅release开启 -->
    <defendOnDebug>true</defendOnDebug>
    <!-- 关闭 所有防护功能 -->
    <defendOff>true</defendOff>

    <!-- 首页点击事件防护， scope配置生效的包名范围，多个模块可配置多条记录 -->
    <defendInterfaceImpl interface="android.view.OnClickListener" scope="com.cainiao.home.wireless.home">
    </defendInterfaceImpl>
    <!-- 我的模块点击事件防护 -->
    <defendInterfaceImpl interface="android.view.OnClickListener" scope="com.cainiao.home.wireless.mine">
    </defendInterfaceImpl>

    <!-- 事件分发防护， scope配置生效的包名范围 -->
    <defendInterfaceImpl interface="android.view.Window.Callback" scope="com.cainiao.home.wireless.home">
        <defendMethod name="dispatchTouchEvent" returnValue="false"/>
    </defendInterfaceImpl>

    <!-- 键盘点击防护， scope配置生效的包名范围 -->
    <defendInterfaceImpl interface="android.view.KeyEvent.Callback" scope="com.cainiao.home.wireless.home">
    </defendInterfaceImpl>

    <!-- Runnable任务防护， scope配置生效的包名范围-->
    <defendInterfaceImpl interface="java.lang.Runnable" scope="com.cainiao.home.wireless.home">
    </defendInterfaceImpl>

    <!-- Handler.Callback 防护， scope配置生效的包名范围 -->
    <defendInterfaceImpl interface="android.os.Handler.Callback" scope="com.cainiao.home.wireless.home">
    </defendInterfaceImpl>

    <!-- Handler实现防护 -->
    <defendSubClass class="android.os.Handler" scope="com.cainiao.home.wireless.home">
        <defendMethod name="handleMessage"/>
    </defendSubClass>

    <!-- BroadcastReceiver 消息接收防护 -->
    <defendSubClass class="android.content.BroadcastReceiver" scope="com.cainiao.home.wireless.home">
        <defendMethod name="onReceive"/>
    </defendSubClass>


    <!-- Activity关键性生命周期防护 -->
    <defendSubClass class="android.app.Activity" scope="com.cainiao.home.wireless.home">
        <defendMethod name="onCreate"/>
        <defendMethod name="onStart"/>
        <defendMethod name="onResume"/>
        <defendMethod name="onPause"/>
        <defendMethod name="onStop"/>
        <defendMethod name="onDestroy"/>
        <defendMethod name="onNewIntent"/>
        <defendMethod name="onSaveInstanceState"/>
    </defendSubClass>

    <!-- Application 启动防护 -->
    <defendSubClass class="android.app.Application" scope="com.cainiao">
        <defendMethod name="onCreate" />
        <defendMethod name="onTerminate" />
        <defendMethod name="onConfigurationChanged" />
    </defendSubClass>

    <!--- 默认常规防护，默认防护以上功能 -->
    <defendAuto scope="com.cainiao.wireless.home"/>


    <!--RecyclerView 部分异常防护 -->
    <defendClass class="android.support.v7.widget.RecyclerView">
        <defendMethod name="setScrollState"/>
        <defendMethod name="dispatchOnScrollStateChanged"/>
        <defendMethod name="scrollToPosition"/>
        <defendMethod name="onLayout"/>
        <defendMethod name="dispatchLayout"/>
        <defendMethod name="draw"/>
        <defendMethod name="onAttachedToWindow"/>
        <defendMethod name="removeAnimatingView"/>
    </defendClass>

    <!-- LinearLayoutManager 部分布局异常防护 -->
    <defendClass class="android.support.v7.widget.LinearLayoutManager">
        <defendMethod name="scrollBy" returnValue="0"/>
        <defendMethod name="layoutChunk" />
        <defendMethod name="onLayoutChildren"/>
    </defendClass>


    <!-- DefaultItemAnimator runPendingAnimations异常防护 -->
    <defendClass class="android.support.v7.widget.DefaultItemAnimator">
        <defendMethod name="runPendingAnimations"/>
    </defendClass>

    <!-- AndroidX ForceStopRunnable异常防护 -->
    <defendClass class="androidx.work.impl.utils.ForceStopRunnable" >
        <defendMethod name="run"/>
    </defendClass>

    <!-- RecyclerView 后台获取异常防护 -->
    <defendClass class="android.support.v7.widget.GapWorker" >
        <defendMethod name="run"/>
    </defendClass>

    <!--防护常见类型的点击，handler，runable等常见异常-->
    <defendAuto scope="com.cainiao.wireless.bgx.home"/>
    <defendAuto scope="com.cainiao.wireless.zfb.home"/>

</resources>